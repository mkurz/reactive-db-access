/**
 * This class is generated by jOOQ
 */
package java8.concurrent.dbaccess.backend.generated.tables.records;


import java.sql.Timestamp;

import java8.concurrent.dbaccess.backend.generated.tables.Mentions;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MentionsRecord extends UpdatableRecordImpl<MentionsRecord> implements Record4<Long, Timestamp, String, String> {

	private static final long serialVersionUID = 1387544241;

	/**
	 * Setter for <code>PUBLIC.MENTIONS.TWEET_ID</code>.
	 */
	public void setTweetId(Long value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>PUBLIC.MENTIONS.TWEET_ID</code>.
	 */
	public Long getTweetId() {
		return (Long) getValue(0);
	}

	/**
	 * Setter for <code>PUBLIC.MENTIONS.CREATED_ON</code>.
	 */
	public void setCreatedOn(Timestamp value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>PUBLIC.MENTIONS.CREATED_ON</code>.
	 */
	public Timestamp getCreatedOn() {
		return (Timestamp) getValue(1);
	}

	/**
	 * Setter for <code>PUBLIC.MENTIONS.TEXT</code>.
	 */
	public void setText(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>PUBLIC.MENTIONS.TEXT</code>.
	 */
	public String getText() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>PUBLIC.MENTIONS.USER_NAME</code>.
	 */
	public void setUserName(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>PUBLIC.MENTIONS.USER_NAME</code>.
	 */
	public String getUserName() {
		return (String) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Long> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Long, Timestamp, String, String> fieldsRow() {
		return (Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Long, Timestamp, String, String> valuesRow() {
		return (Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field1() {
		return Mentions.MENTIONS.TWEET_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field2() {
		return Mentions.MENTIONS.CREATED_ON;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return Mentions.MENTIONS.TEXT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return Mentions.MENTIONS.USER_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value1() {
		return getTweetId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value2() {
		return getCreatedOn();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getText();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getUserName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MentionsRecord value1(Long value) {
		setTweetId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MentionsRecord value2(Timestamp value) {
		setCreatedOn(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MentionsRecord value3(String value) {
		setText(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MentionsRecord value4(String value) {
		setUserName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MentionsRecord values(Long value1, Timestamp value2, String value3, String value4) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached MentionsRecord
	 */
	public MentionsRecord() {
		super(Mentions.MENTIONS);
	}

	/**
	 * Create a detached, initialised MentionsRecord
	 */
	public MentionsRecord(Long tweetId, Timestamp createdOn, String text, String userName) {
		super(Mentions.MENTIONS);

		setValue(0, tweetId);
		setValue(1, createdOn);
		setValue(2, text);
		setValue(3, userName);
	}
}
